n_cell = 166 42 1
max_grid_size = 166
dt = 5.e-15  # MATLAB code uses 5.e-6 nanoseconds
nsteps = 250000
plot_int = 10000
chk_int = -1
restart = -1

prob_lo = 0. 0. 0.
prob_hi = 498.e-9 126.e-9 3.e-9

mu0 = 1.25663e-6

Mx_parser(x,y,z) = "8.e5 * (x>0.)*(x<498.e-9)*(y>0.)*(y<126.e-9)*(z>0.)*(z<3.e-9)"
My_parser(x,y,z) = "0."
Mz_parser(x,y,z) = "0."

Hx_bias_parser(x,y,z,t) = "(t<=2.e-11)*1.e5 + (t>2.e-8)*(t<=3.e-11)*(3.e-11-t)*1.e16 - (t>2.5e-10)*19576"
Hy_bias_parser(x,y,z,t) = "(t<=2.e-11)*1.e5 + (t>2.e-8)*(t<=3.e-11)*(3.e-11-t)*1.e16 + (t>2.5e-10)*3422"
Hz_bias_parser(x,y,z,t) = "(t<=2.e-11)*1.e5 + (t>2.e-8)*(t<=3.e-11)*(3.e-11-t)*1.e16"

alpha_parser(x,y,z) = "0.5          * (x>0.)*(x<498.e-9)*(y>0.)*(y<126.e-9)*(z>0.)*(z<3.e-9)"
Ms_parser(x,y,z) = "8.e5            * (x>0.)*(x<498.e-9)*(y>0.)*(y<126.e-9)*(z>0.)*(z<3.e-9)"
gamma_parser(x,y,z) = "-1.759e11    * (x>0.)*(x<498.e-9)*(y>0.)*(y<126.e-9)*(z>0.)*(z<3.e-9)"
exchange_parser(x,y,z) = "1.3e-11   * (x>0.)*(x<498.e-9)*(y>0.)*(y<126.e-9)*(z>0.)*(z<3.e-9)"
anisotropy_parser(x,y,z) = "0."
DMI_parser(x,y,z) = "0."

alpha_scale_step = 50000
alpha_scale_factor = 0.04

demag_coupling = 1
demag_solver = 1  # -1 = periodic/Neumann MLMG; 0 = Open Poisson MLMG; 1 = FFT-based
M_normalization = 1  # 0 = unsaturated case; 1 = saturated case
exchange_coupling = 1
anisotropy_coupling = 0
anisotropy_axis = 0.0 1.0 0.0
DMI_coupling = 0

# INTEGRATION

TimeIntegratorOption = 1 #Forward Euler
#TimeIntegratorOption = 2 #Predictor-corrector
#TimeIntegratorOption = 3 #2nd order artemis way
#TimeIntegratorOption = 4 #amrex/sundials backend integrators

## *** Selecting the integrator backend ***
## integration.type can take on the following string or int values:
## (without the quotation marks)
## "ForwardEuler" or "0" = Native Forward Euler Integrator
## "RungeKutta" or "1"   = Native Explicit Runge Kutta
## "SUNDIALS" or "2"     = SUNDIALS ARKODE Integrator
## for example:
integration.type = RungeKutta

## *** Parameters Needed For Native Explicit Runge-Kutta ***
#
## integration.rk.type can take the following values:
### 0 = User-specified Butcher Tableau
### 1 = Forward Euler
### 2 = Trapezoid Method
### 3 = SSPRK3 Method
### 4 = RK4 Method
integration.rk.type = 2

## If using a user-specified Butcher Tableau, then
## set nodes, weights, and table entries here:
#
## The Butcher Tableau is read as a flattened,
## lower triangular matrix (but including the diagonal)
## in row major format.
##integration.rk.weights = 1
##integration.rk.nodes = 0
##integration.rk.tableau = 0.0

#integration.sundials.strategy = ERK
#integration.sundials.erk.method = SSPRK3
